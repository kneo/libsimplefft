/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class in_waslos_kneo_libsimplefft_FFTProcessor */

#ifndef _Included_in_waslos_kneo_libsimplefft_FFTProcessor
#define _Included_in_waslos_kneo_libsimplefft_FFTProcessor
#ifdef __cplusplus
extern "C" {
#endif
#undef in_waslos_kneo_libsimplefft_FFTProcessor_FFT_MODE_NORMAL
#define in_waslos_kneo_libsimplefft_FFTProcessor_FFT_MODE_NORMAL 0L
#undef in_waslos_kneo_libsimplefft_FFTProcessor_FFT_MODE_INVERSE
#define in_waslos_kneo_libsimplefft_FFTProcessor_FFT_MODE_INVERSE 1L
#undef in_waslos_kneo_libsimplefft_FFTProcessor_CPLX_TYPE_SP
#define in_waslos_kneo_libsimplefft_FFTProcessor_CPLX_TYPE_SP 0L
#undef in_waslos_kneo_libsimplefft_FFTProcessor_CPLX_TYPE_DP
#define in_waslos_kneo_libsimplefft_FFTProcessor_CPLX_TYPE_DP 1L
#undef in_waslos_kneo_libsimplefft_FFTProcessor_CPLX_TYPE_INT
#define in_waslos_kneo_libsimplefft_FFTProcessor_CPLX_TYPE_INT 2L
/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    createFFTContext
 * Signature: (IBB)I
 */
JNIEXPORT jint JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_createFFTContext
  (JNIEnv *, jobject, jint, jbyte, jbyte);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    destroyFFTContext
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_destroyFFTContext
  (JNIEnv *, jobject, jint);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    performFFTf
 * Signature: (I[F[F)V
 */
JNIEXPORT void JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_performFFTf
  (JNIEnv *, jobject, jint, jfloatArray, jfloatArray);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    performFFTd
 * Signature: (I[D[D)V
 */
JNIEXPORT void JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_performFFTd
  (JNIEnv *, jobject, jint, jdoubleArray, jdoubleArray);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    performFFTi
 * Signature: (I[S[S)V
 */
JNIEXPORT void JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_performFFTi
  (JNIEnv *, jobject, jint, jshortArray, jshortArray);
  
/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    createFastConvolutionContext
 * Signature: (I[F)I
 */
JNIEXPORT jint JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_createFastConvolutionContext__I_3F
  (JNIEnv *, jclass, jint, jfloatArray);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    createFastConvolutionContext
 * Signature: (I[D)I
 */
JNIEXPORT jint JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_createFastConvolutionContext__I_3D
  (JNIEnv *, jclass, jint, jdoubleArray);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    createFastConvolutionContext
 * Signature: (I[S)I
 */
JNIEXPORT jint JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_createFastConvolutionContext__I_3S
  (JNIEnv *, jclass, jint, jshortArray);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    performFastConvolution
 * Signature: (I[F)V
 */
JNIEXPORT void JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_performFastConvolution__I_3F
  (JNIEnv *, jclass, jint, jfloatArray);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    performFastConvolution
 * Signature: (I[D)V
 */
JNIEXPORT void JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_performFastConvolution__I_3D
  (JNIEnv *, jclass, jint, jdoubleArray);

/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    performFastConvolution
 * Signature: (I[S)V
 */
JNIEXPORT void JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_performFastConvolution__I_3S
  (JNIEnv *, jclass, jint, jshortArray);
  
/*
 * Class:     in_waslos_kneo_libsimplefft_FFTProcessor
 * Method:    destroyFastConvolution
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_in_waslos_kneo_libsimplefft_FFTProcessor_destroyFastConvolution
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
